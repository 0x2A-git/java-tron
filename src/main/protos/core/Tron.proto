syntax = "proto3";

import "google/protobuf/any.proto";

package protocol;


option java_package = "org.tron.protos"; //Specify the name of the package that generated the Java file
option java_outer_classname = "Protocal"; //Specify the class name of the generated Java file

// Account
message Account {

  enum AccountType {
    Normal = 0;
    AssertIssue = 1;
    Contract = 2;
  }

  bytes accout_name = 1;
  AccountType type = 2;
  bytes address = 3;
  int64 balance = 4;
  repeated string votes = 5;
  map<string, int64> asset = 6;

}

// Contract
message Contract {
  bytes address = 1;
  bytes scripts = 2;
  string name = 3;
}

// Witness
message Witness {
  bytes address = 1;
  int64 voteCount = 2;
  bytes pubKey = 3;
  string url = 4;
  int64 totalProduced = 5;
  int64 totalMissed = 6;
  int64 latestBlockNum = 7;
}

// Transcation

message TXOutput {
  int64 value = 1;
  bytes pubKeyHash = 2;
}

message TXInput {
  message raw {
    bytes txID = 1;
    int64 vout = 2;
    bytes pubKey = 4;
  }

  bytes signature = 3;

}

message TXOutputs {
  repeated TXOutput outputs = 1;
}

message Transaction {

  enum TranscationType {
    Transfer = 0;
    DeployContract = 1;
    CreateAccount = 2;
    VoteWitess = 3;
    AssetIssue = 4;
  }

  bytes id = 1;
  TranscationType type = 2;
  repeated TXInput vin = 3;
  repeated TXOutput vout = 4;
  //bytes hash = 5;
  bytes data = 10;
  repeated google.protobuf.Any parameter = 11;
  bytes scripts = 12;
}


message BlockHeader {

  message raw {
    int64 timestamp = 1;
    bytes txTrieRoot = 2;
    bytes parentHash = 3;
    bytes nonce = 5;
    bytes difficulty = 6;
    uint64 number = 7;
    uint64 witness_id = 8;
    bytes witness_address = 9;
  }

  bytes witness_signature = 12;

}

// block

message Block {
  repeated Transaction transactions = 1;
  BlockHeader block_header = 2;
}

// Inventory

message Inventory {
  enum InventoryType //枚举消息类型
  {
    TRX = 0;
    BLOCK = 1;
  }
  InventoryType type = 1;
  repeated bytes ids = 2;
}


message Items {
  enum ItemType //枚举消息类型
  {
    ERR = 0; //proto3版本中，首成员必须为0，成员不应有相同的值
    TRX = 1;
    BLOCK = 2;
    BLOCKHEADER = 3;
  }

  ItemType type = 1;
  repeated Block blocks = 2;
  repeated BlockHeader block_headers = 3;
  repeated Transaction transactions = 4;
}